spring:
  application:
    name: data-service

  # JPA / Hibernate Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false

  # PostgreSQL DataSource (External Docker Container)
  datasource:
    url: jdbc:postgresql://${DB_HOST:host.docker.internal}:${DB_PORT:5432}/${DB_NAME:devdb}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  shutdown: graceful
  error:
    include-message: always
    include-binding-errors: always

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true

# Logging Configuration
logging:
  level:
    root: INFO
    dev.docnyte.dataservice: ${LOG_LEVEL:INFO}
    org.springframework.web: INFO
    org.hibernate: INFO
    org.zalando.logbook: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Logbook Configuration (Request/Response Logging)
logbook:
  exclude:
    - /actuator/**
  format:
    style: http
  write:
    max-body-size: 1000
  obfuscate:
    headers:
      - Authorization
      - X-Secret
    parameters:
      - password
      - access_token

# SpringDoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
  show-actuator: false
